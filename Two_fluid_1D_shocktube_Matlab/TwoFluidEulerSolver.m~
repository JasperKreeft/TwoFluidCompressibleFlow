clear all
close all
clc

% options;
test = 8; time = 2; flux = 2; BC_L = 1; BC_R = 1; limiter = 1; an

L  = 0.5;
dx = L/N;

if limiter==0
    CFL = 0.9;
else
    CFL = 0.45;
end

x = ((1:N)-1/2)*dx-0.25;

y = [0 0.2];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Initial conditions
n = 1;

if nr<=5
    test     = zeros(5,1);
    test(nr) = 1;

    gamma1           = [1.4    1.4 1.6  1.4   1.667 ]*test; % ratio of specific heat left state
    gamma2           = [1.6    1.6 1.4  1.6   1.200 ]*test; % ratio of specific heat right state

    W(1,1:(N/2),1)   = [1.0 1000.0 1.0 10.0   3.1748]*test; % Density left state
    W(2,1:(N/2),1)   = [1.0    1.0 0.0  0.0   9.4350]*test; % Velocity left state
    W(3,1:(N/2),1)   = [1.0    1.0 1.0 10.0 100.0   ]*test; % pressure left state
    W(4,1:(N/2),1)   = [1.0    1.0 1.0  1.0   1.0   ]*test; % mass fraction left state
    W(5,1:(N/2),1)   = [1.0    1.0 1.0  1.0   1.0   ]*test; % volume fraction left state

    W(1,(N/2+1):N,1) = [0.125 1.0 0.125 0.125 1.0   ]*test; % Density right state
    W(2,(N/2+1):N,1) = [1.0   1.0 0.0   0.0   0.0   ]*test; % Velocity right state
    W(3,(N/2+1):N,1) = [1.0   1.0 0.1   0.1   1.0   ]*test; % Pressure right state
    W(4,(N/2+1):N,1) = [0.0   0.0 0.0   0.0   0.0   ]*test; % Mass fraction right state
    W(5,(N/2+1):N,1) = [0.0   0.0 0.0   0.0   0.0   ]*test; % Volume fraction right state

elseif nr==6

    %Air1
    gamma1   = 1.4;
    W(1,1:(N/2),1) = 1.92691;
    W(2,1:(N/2),1) = 0.33361;
    W(3,1:(N/2),1) = 1.56980;
    W(4,1:(N/2),1) = 1.0;
    W(5,1:(N/2),1) = 1.0;

    %Air2
    W(1,(N/2-7):(N/2),1) = 1.4;
    W(2,(N/2-7):(N/2),1) = 0.0;
    W(3,(N/2-7):(N/2),1) = 1.0;
    W(4,(N/2-7):(N/2),1) = 1.0;
    W(5,(N/2-7):(N/2),1) = 1.0;

    %He
    gamma2   = 1.648;
    W(1,(N/2+1):N,1) = 0.25463;
    W(2,(N/2+1):N,1) = 0.0;
    W(3,(N/2+1):N,1) = 1.0;
    W(4,(N/2+1):N,1) = 0.0;
    W(5,(N/2+1):N,1) = 0.0;

elseif nr==7

    %Air1
    gamma1   = 1.4;
    W(1,1:(N/2),1) = 1.92691;
    W(2,1:(N/2),1) = 0.33361;
    W(3,1:(N/2),1) = 1.56980;
    W(4,1:(N/2),1) = 1.0;
    W(5,1:(N/2),1) = 1.0;

    %Air2
    W(1,(N/2-7):(N/2),1) = 1.4;
    W(2,(N/2-7):(N/2),1) = 0.0;
    W(3,(N/2-7):(N/2),1) = 1.0;
    W(4,(N/2-7):(N/2),1) = 1.0;
    W(5,(N/2-7):(N/2),1) = 1.0;

    %R22
    gamma2   = 1.249;
    W(1,(N/2+1):N,1) = 4.41540;
    W(2,(N/2+1):N,1) = 0.0;
    W(3,(N/2+1):N,1) = 1.0;
    W(4,(N/2+1):N,1) = 0.0;
    W(5,(N/2+1):N,1) = 0.0;
    
elseif nr==8
    gamma1 = 1.4;
    W(1,1:(N/2),1) = 500.0;
    W(2,1:(N/2),1) = 0.0;
    W(3,1:(N/2),1) = 100.0;
    W(4,1:(N/2),1) = 0.5;
    W(5,1:(N/2),1) = 0.5;
    
    gamma2 = 4.4;
    W(1,(N/2+1):N,1) = 500.0;
    W(2,(N/2+1):N,1) = 0.0;
    W(3,(N/2+1):N,1) = 1.0;
    W(4,(N/2+1):N,1) = 0.5;
    W(5,(N/2+1):N,1) = 0.5;

end

Q = Prim2Cons(W,gamma1,gamma2);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

t(n)   = 0;
Lambda = 20;

Qf = zeros(5,2*N);

if ani==1
    han = waitbar(0,'Please wait...','Position',[500 500 288 60]);
elseif ani==3 || ani==4
    figure('Position',[1,1024,1280,1024])
end

while t(n)<T

n      = n+1;
dt     = CFL*dx/Lambda;
t(n)   = t(n-1)+dt;
if ani==1
    waitbar(t(n)/T,han)
end
Lambda = [];

% disp([n t(n)]);

q = Q;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%               Third-Order Runge-Kutta scheme                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
% Stage 1

[w]   = Cons2Prim(q,gamma1,gamma2);
[Wf]  = limiters(N,w,limiter);
if flux==1
%     [F,sL,sR,Lambda] = ExactFlux(N,Wf,gamma1,gamma2,Lambda);
elseif flux==2
    [F,sL,sR,Lambda] = OsherFlux(N,Wf,gamma1,gamma2,Lambda);
elseif flux==3
    [F,sL,sR,Lambda] = LinearOsherFlux(N,Wf,gamma1,gamma2,Lambda);
end
[S]              = sourceintegral(N,w,Wf,gamma1,gamma2);
[F]              = BoundaryConditions(F,Wf,gamma1,gamma2,N,BC_L,BC_R);

dQ1(1:4,:) = -dt/dx*(F(1:4,2:N+1)-F(1:4,1:N));
dQ1(5,:)   = -dt/dx*(F(5,2:N+1)-F(5,1:N))+dt/dx*(sR+S+sL);
q          = Q+dQ1;

if time==2
% Stage 2

[w]   = Cons2Prim(q,gamma1,gamma2);
[Wf]  = limiters(N,w,limiter);
if flux==1
%     [F,sL,sR,Lambda] = ExactFlux(N,Wf,gamma1,gamma2,Lambda);
elseif flux==2
    [F,sL,sR,Lambda] = OsherFlux(N,Wf,gamma1,gamma2,Lambda);
elseif flux==3
    [F,sL,sR,Lambda] = LinearOsherFlux(N,Wf,gamma1,gamma2,Lambda);
end
[S]              = sourceintegral(N,w,Wf,gamma1,gamma2);
[F]              = BoundaryConditions(F,Wf,gamma1,gamma2,N,BC_L,BC_R);

dQ2(1:4,:) = -dt/dx*(F(1:4,2:N+1)-F(1:4,1:N));
dQ2(5,:)   = -dt/dx*(F(5,2:N+1)-F(5,1:N))+dt/dx*(sR+S+sL);
q          = Q+1/4*(dQ1+dQ2);


% Stage 3

[w]   = Cons2Prim(q,gamma1,gamma2);
[Wf]  = limiters(N,w,limiter);
if flux==1
%     [F,sL,sR,Lambda] = ExactFlux(N,Wf,gamma1,gamma2,Lambda);
elseif flux==2
    [F,sL,sR,Lambda] = OsherFlux(N,Wf,gamma1,gamma2,Lambda);
elseif flux==3
    [F,sL,sR,Lambda] = LinearOsherFlux(N,Wf,gamma1,gamma2,Lambda);
end
[S]              = sourceintegral(N,w,Wf,gamma1,gamma2);
[F]              = BoundaryConditions(F,Wf,gamma1,gamma2,N,BC_L,BC_R);

dQ3(1:4,:) = -dt/dx*(F(1:4,2:N+1)-F(1:4,1:N));
dQ3(5,:)   = -dt/dx*(F(5,2:N+1)-F(5,1:N))+dt/dx*(sR+S+sL);
q          = Q+1/6*(dQ1+dQ2+4*dQ3);
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q = q;

W(:,:,n) = Cons2Prim(Q,gamma1,gamma2);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if ani==2
    figure(1)
    plot(x,W(1,:,n),'+-b','linewidth',2)
    grid on
    title('density')
    xlim([-0.25 0.25])
    pause(0.05)
elseif ani==3
    figure(1)
    subplot(2,4,1:2)
    plot(x,W(1,:,n),'.-','linewidth',1)
    title('density')
    grid on
    xlim([-0.25 0.25])
    subplot(2,4,3:4)
    plot(x,W(2,:,n),'.-r','linewidth',1)
    grid on
    title('velocity')
    xlim([-0.25 0.25])
    subplot(2,4,5:6)
    plot(x,W(3,:,n),'.-g','linewidth',1)
    grid on
    title('pressure')
    xlim([-0.25 0.25])
    subplot(2,4,7)
    plot(x,W(4,:,n),'.-c','linewidth',1)
    title('mass fraction')
    grid on
    axis([-0.25 0.25 -0.2 1.2])
    subplot(2,4,8)
    plot(x,W(5,:,n),'.-m','linewidth',1)
    title('volume fraction')
    grid on
    axis([-0.25 0.25 -0.2 1.2])
    pause(0.05)
elseif ani==4
    z = zeros(2,N);
    z(1,:) = W(1,:,n);
    z(2,:) = W(1,:,n);
    figure(1)
    pcolor(x,y,z)
    shading interp
    axis equal
    axis off
    colorbar('horiz')
    colormap(hot)
    pause(0.1)
end

end %time step

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

z = zeros(length(t),N);

for j=1:length(t)
    for i=1:N
        z(j,i) = W(1,i,j);
    end
end

figure
contourf(x,t,z,50)
xlabel('location x')
ylabel('time t')
title('x-t diagram with contourlines of the density \rho')

figure
pcolor(x,t,z)
shading interp
% set(gca,'clim',[0 1])
xlabel('location x')
ylabel('time t')
title('x-t diagram with contourlines of the density \rho')

if abs(W(1,1,1)-W(1,1,end))<1e-6 && abs(W(1,end,1)-W(1,end,end))<1e-6
   postprocessen(W,t,x,gamma1,gamma2)
end